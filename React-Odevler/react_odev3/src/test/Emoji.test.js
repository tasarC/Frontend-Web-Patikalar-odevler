//Gerekli baÄŸÄ±mlÄ±lÄ±klarÄ±n eklenmesi
import {render,screen,fireEvent } from '@testing-library/react'
import '@testing-library/jest-dom'
import userEvent from '@testing-library/user-event'
import App from '../App'
import EmojiList from '../emojiList.json'

// testlerimizi gruplamak ve fonksiyon,modÃ¼l vb.yapÄ±larÄ±n davranÄ±ÅŸÄ±nÄ± aÃ§Ä±klamak iÃ§in describe fonksiyonu kullanÄ±ldÄ±.
describe("Emoji proje testleri",()=>{

    let header , emojiList ,copyEmoji

    // testlerimizden Ã¶nce Ã§alÅŸmasÄ±nÄ± istedigimiz yapÄ±larÄ± beforeEach fonsiyonuna eklenir.
    beforeEach(()=>{
        render(<App/>)
    })
    
    // BaÅŸlÄ±ÄŸÄ±n baÅŸarÄ±yla oluÅŸturulup oluÅŸturulmadÄ±ÄŸÄ±nÄ± kontrol edecek test kodu 
    test("header render edildi",()=>{
        header =screen.getByText(/Emoji Search/i)
        expect(header).toBeInTheDocument()//header test kontrolÃ¼
       

    })
    
    //Uygulama ilk aÃ§Ä±ldÄ±ÄŸÄ±nda emoji listesinin baÅŸarÄ±lÄ± bir ÅŸekilde oluÅŸturulup oluÅŸturulmadÄ±ÄŸÄ±nÄ± kontrol edecek test kodu 
    test("Emoji listesi render edildi",()=>{

        emojiList = EmojiList.slice(0,20)
        
        // listedeki ilk 20 eleman ekranda gosterilmiÅŸmi kontrolÃ¼
        
        emojiList.map((list)=>{
            expect(screen.getByText(list.title)).toBeInTheDocument()

        })

    })
    
    // Bir filtre yapÄ±ldÄ±ÄŸÄ±nda emoji listesinin o filtreye gÃ¶re yeniden oluÅŸturulduÄŸunu kontrol edecek test kodu 
    test('Emoji listesinin bu filtreye uygun ÅŸekilde yeniden render edildi.', () => {

        const input = screen.getByRole('textbox'); //input deÄŸerlerine ulaÅŸÄ±lÄ±r.

        fireEvent.change(input, { target: { value: 'snow' } });

        expect(screen.getAllByText(/snow/i)).toHaveLength(6);
    });

    // Listedeki herhangi bir emojiye tÄ±klandÄ±ÄŸÄ±nda, test kodu ilgili emojinin kopyalanÄ±p kopyalanmadÄ±ÄŸÄ±nÄ± kontrol edecektir.
    test("Ä°lgili emojinin kopyalanmadigini kontrol edilmesi",()=>{

        copyEmoji = screen.getByText("Blush") // sadece bir Ã¶ÄŸe tanÄ±mladÄ±k.

        userEvent.click(copyEmoji) //Ã¶ÄŸe ye tÄ±klanmasyÄ± simÃ¼le ediyoruz

        expect(copyEmoji.parentElement.getAttribute("data-clipboard-text")).toMatch("ğŸ˜Š")//pano iÃ§eriÄŸinin tÄ±klanan emojinin simgesiyle onaylÄ±yoruz.
    })

})
